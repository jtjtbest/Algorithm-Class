



public class Solution {
  public int findHeight(TreeNode root) {
    // Write your solution here
    // iterative method use arrayDeque
    // Tc: O(height)
    if (root == null) {
      return 0;
    }

    int height = 0;
    Queue<TreeNode> queue = new ArrayDeque<>();
    queue.offer(root);
    
    while (1 == 1) { // always true condition to traverse tree
      int size = queue.size(); // queue contains all the treeNode from next level
      if (size == 0) { // if no more children, then current height is the final height
        return height;
      }
      height++; // if there is at least 1 child node, we increase height by 1
      while (size > 0) {
        TreeNode curr = queue.poll();// for each child node we check left and right, if exist we add to queue
        if (curr.left != null) {
          queue.offer(curr.left);
        }
        if (curr.right != null) {
          queue.offer(curr.right);
        }
        size--; // after check one node we reduce the size by 1
      }
    }
    
  }
}
